name: release
on:
  workflow_dispatch:

jobs:
  build-linux-no-container:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: riscv64gc-unknown-linux-gnu
            strip: riscv64-linux-gnu-strip
            setup: |
              sudo apt-get update
              sudo apt-get install gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu -y

    name: build-${{ matrix.target }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup cross compile toolchain
        if: ${{ matrix.setup }}
        run: ${{ matrix.setup }}

      - name: Setup rust target
        run: rustup target add ${{ matrix.target }}

      - uses: bahmutov/npm-install@v1.8.32
      - name: Build release
        run: yarn build-release
        env:
          RUST_TARGET: ${{ matrix.target }}
      - name: Build CLI
        run: |
          yarn napi build --bin lightningcss --release --features cli --target ${{ matrix.target }}
          mv target/${{ matrix.target }}/release/lightningcss lightningcss
      - name: Strip debug symbols # https://github.com/rust-lang/rust/issues/46034
        if: ${{ matrix.strip }}
        run: ${{ matrix.strip }} *.node lightningcss
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.target }}
          path: |
            *.node
            lightningcss
  release:
    runs-on: ubuntu-latest
    name: Build and release
    needs:
      - build-linux-no-container

    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1.8.32
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Build npm packages
        run: |
          node scripts/build-npm.js
          cp artifacts/wasm/* wasm/.
          node scripts/build-wasm.js
      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish to npm
        run: |
          for pkg in npm/*; do
            echo "Publishing $pkg..."
            cd $pkg;
            npm publish;
            cd ../..;
          done
          cd wasm
          echo "Publishing lightningcss-wasm...";
          npm publish
          cd ..
          cd cli
          echo "Publishing lightningcss-cli...";
          npm publish
          cd ..
          echo "Publishing lightningcss...";
          npm publish

  release-crates:
    runs-on: ubuntu-latest
    name: Release Rust crate
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1.8.32
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - run: cargo login ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      - run: |
          cargo install cargo-workspaces
          cargo workspaces publish --no-remove-dev-deps --from-git -y
